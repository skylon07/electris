{
    "fileTypes": [
        "css",
        "scss",
        "less"
    ],
    "scopeName": "electris.text.css",
    "patterns": [
        { "include": "#top-level-operators"},
        { "include": "#comment" },
        { "include": "#class-declaration" },
        { "include": "#class-declaration-unfinished-top-level" }
    ],
    "repository": {
        "top-level-operators": {
            "patterns": [
                { "include": "#at-operator-mixin" },
                { "include": "#at-operators" },
                { "include": "#variable-declaration" }
            ]
        },
        "at-operators": {
            "match": "(@(import|include|[a-zA-Z]*))\\s+([^;]*)\\s*(;)?",
            "captures": {
                "1": { "name": "electris.source-code.operator" },
                "3": { "name": "electris.source-code.primitive-literal" },
                "4": { "name": "electris.source-code.punctuation" }
            }
        },
        "at-operator-mixin": {
            "begin": "(@(mixin))\\s+(.*)\\s*(?=\\{)",
            "end": "(?<=\\})",
            "captures": {
                "1": { "name": "electris.source-code.operator" },
                "3": { "name": "electris.source-code.primitive-literal" },
                "4": { "name": "electris.source-code.punctuation" }
            },
            "patterns": [
                { "include": "#class-declaration-block" }
            ]
        },
        "variable-declaration": {
            "begin": "(\\$)(?=[_a-zA-Z0-9\\-]+\\s*:)",
            "end": "(?<=;|\\})",
            "beginCaptures": {
                "1": { "name": "electris.source-code.operator" }
            },
            "patterns": [
                { "include": "#class-property" }
            ]
        },

        "comment": {
            "patterns": [
                { "include": "#comment-block" },
                { "include": "#comment-inline" }
            ]
        },
        "comment-block": {
            "name": "electris.source-code.comment",
            "begin": "/\\*",
            "end": "\\*/",
            "patterns": [{ "include": "#comment" }]
        },
        "comment-inline": {
            "name": "electris.source-code.comment",
            "match": "//.*$"
        },

        "class-declaration": {
            "begin": "(?=(?!.*(//|/\\*)).+\\{)",
            "end": "(?<=\\})",
            "patterns": [
                { "include": "#class-declaration-patterns" }
            ]
        },
        "class-declaration-unfinished-top-level": {
            "begin": "(?=^\\s*.)",
            "end": "(?<=$)",
            "patterns": [
                { "include": "#class-declaration-patterns" }
            ]
        },
        "class-declaration-unfinished": {
            "begin": "(?=&|:|^[_a-zA-Z0-9\\s]*\\.|>|\\+|~)",
            "end": "(?<=$)",
            "patterns": [
                { "include": "#class-declaration-patterns" }
            ]
        },
        "class-declaration-patterns": {
            "patterns": [
                { "include": "#class-scope-pseudo" },
                { "include": "#class-scope-name" },
                { "include": "#class-self-ref-operator" },
                { "include": "#class-scope-operator" },
                { "include": "#list-separator" },
                { "include": "#parameter-punctuation" },
                { "include": "#class-declaration-block" }
            ]
        },

        "class-scope-name": {
            "name": "electris.source-code.types.type",
            "match": "[_a-zA-Z0-9\\-]+"
        },
        "class-scope-pseudo": {
            "name": "electris.source-code.function-call",
            "match": "(?<=:\\s*)(?!root)[_a-zA-Z0-9\\-]+"
        },
        "class-self-ref-operator": {
            "name": "electris.source-code.operator",
            "match": "&"
        },
        "class-scope-operator": {
            "name": "electris.source-code.operator",
            "match": ":|>|\\+|~|\\.|\\*"
        },

        "list-separator": {
            "name": "electris.source-code.punctuation",
            "match": ","
        },
        "parameter-punctuation": {
            "name": "electris.source-code.punctuation",
            "match": "\\(|\\)"
        },

        "class-declaration-block": {
            "begin": "(\\{)",
            "end": "(\\})",
            "beginCaptures": {
                "1": { "name": "electris.source-code.punctuation" }
            },
            "endCaptures": {
                "1": { "name": "electris.source-code.punctuation" }
            },
            "patterns": [
                { "include": "#top-level-operators" },
                { "include": "#comment" },
                { "include": "#class-declaration" },
                { "include": "#class-declaration-unfinished" },
                { "include": "#class-property" }
            ]
        },

        "class-property": {
            "begin": "(?:\\s*)([_a-zA-Z0-9\\-]+)",
            "end": "(;)|(?=\\})",
            "beginCaptures": {
                "1": { "name": "electris.source-code.variable" }
            },
            "endCaptures": {
                "1": { "name": "electris.source-code.punctuation" }
            },
            "patterns": [
                { "include": "#class-property-value-list" }
            ]
        },

        "class-property-value-list": {
            "begin": "(:)",
            "end": "(?=[;}])",
            "beginCaptures": {
                "1": { "name": "electris.source-code.punctuation" }
            },
            "patterns": [
                { "include": "#value-list" }
            ]
        },
        "value-list": {
            "patterns": [
                { "include": "#list-separator" },
                { "include": "#class-variable-deref-operator" },
                { "include": "#class-property-value" }
            ]
        },
        "class-property-value": {
            "patterns": [
                { "include": "#keyword-important" },
                { "include": "#function" },
                { "include": "#variable" },
                { "include": "#value-operator" },
                { "include": "#string" },
                { "include": "#literal" }
            ]
        },
        "class-variable-deref-operator": {
            "name": "electris.source-code.operator",
            "match": "(\\$)([_a-zA-Z0-9\\-]+)",
            "captures": {
                "1": { "name": "electris.source-code.operator" },
                "2": { "name": "electris.source-code.variable" }
            }
        },

        "function": {
            "begin": "([_a-zA-Z0-9\\-]+)(?=\\()",
            "end": "(?<=\\))",
            "beginCaptures": {
                "1" : { "name": "electris.source-code.function-call" }
            },
            "patterns": [
                { "include": "#parameter-punctuation" },
                { "include": "#value-list" }
            ]
        },
        "string": {
            "patterns": [
                { "include": "#string-squote" },
                { "include": "#string-dquote" }
            ]
        },
        "string-squote": {
            "name": "electris.source-code.primitive-literal",
            "begin": "'",
            "end": "'"
        },
        "string-dquote": {
            "name": "electris.source-code.primitive-literal",
            "begin": "\"",
            "end": "\""
        },
        "variable": {
            "name": "electris.source-code.variable",
            "match": "--[_a-zA-Z0-9\\-]+"
        },
        "literal": {
            "name": "electris.source-code.primitive-literal",
            "match": "#?[_a-zA-Z0-9\\-\\.]+"
        },
        "value-operator": {
            "name": "electris.source-code.operator",
            "match": "\\+|-|\\*|/|%"
        },

        "keyword-important": {
            "name": "electris.source-code.operator",
            "match": "!important"
        }
    }
}
